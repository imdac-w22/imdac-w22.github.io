(window.webpackJsonp=window.webpackJsonp||[]).push([[216],{431:function(t,e,a){"use strict";a.r(e);var r=a(0),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#operators","aria-hidden":"true"}},[t._v("#")]),t._v(" Operators")]),t._v(" "),a("p",[t._v("Every fragment of code is, at its core, just a sequence of primitive operations. Here's a list of the basic operators we need to understand as we gain an understanding of variables and other programming fundamentals.")]),t._v(" "),a("h2",{attrs:{id:"basic-arithmetic-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-arithmetic-operators","aria-hidden":"true"}},[t._v("#")]),t._v(" Basic Arithmetic Operators")]),t._v(" "),a("p",[t._v("Whether performing a simple calculation or writing an expression, we will use the basic math operators quite frequently.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Operator")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Character")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Addition")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("+")])]),t._v(" "),a("tr",[a("td",[t._v("Subtraction")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("Multiplication")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("*")])]),t._v(" "),a("tr",[a("td",[t._v("Division")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("/")])])])]),t._v(" "),a("h2",{attrs:{id:"advanced-arithmetic-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-arithmetic-operators","aria-hidden":"true"}},[t._v("#")]),t._v(" Advanced Arithmetic Operators")]),t._v(" "),a("p",[t._v("For more advanced math operations, these ones will come in handy. The increment and decrement shorthands are particularly useful.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Operator")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Character")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Exponentiation")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("**")])]),t._v(" "),a("tr",[a("td",[t._v("Modulus (remainder after division)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%")])]),t._v(" "),a("tr",[a("td",[t._v("Increment (shorthand)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("++")])]),t._v(" "),a("tr",[a("td",[t._v("Decrement (shorthand)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("--")])])])]),t._v(" "),a("h2",{attrs:{id:"assignment-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assignment-operators","aria-hidden":"true"}},[t._v("#")]),t._v(" Assignment Operators")]),t._v(" "),a("p",[t._v("Arithmetic operators would be quite useless without some way to assign values to variables, which is where this set of operators comes in.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Operator")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Character")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Assignment")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("=")])]),t._v(" "),a("tr",[a("td",[t._v("Addition with Assignment")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("+=")])]),t._v(" "),a("tr",[a("td",[t._v("Subtraction with Assignment")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-=")])]),t._v(" "),a("tr",[a("td",[t._v("Multiplication with Assignment")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("*=")])]),t._v(" "),a("tr",[a("td",[t._v("Division with Assignment")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("/=")])]),t._v(" "),a("tr",[a("td",[t._v("Exponentiation with Assignment")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("**=")])]),t._v(" "),a("tr",[a("td",[t._v("Modulus with Assignment")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("%=")])])])]),t._v(" "),a("h2",{attrs:{id:"comparison-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comparison-operators","aria-hidden":"true"}},[t._v("#")]),t._v(" Comparison Operators")]),t._v(" "),a("p",[t._v("These operators are used to write comparison expressions. Note that when "),a("code",[t._v("=")]),t._v(" is used in these operators, we are "),a("strong",[t._v("not")]),t._v(" assigning values to variables.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Operator")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Character")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Equality")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("==")])]),t._v(" "),a("tr",[a("td",[t._v("Strict Equality (equal value and data type)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("===")])]),t._v(" "),a("tr",[a("td",[t._v("Inequality")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("!=")])]),t._v(" "),a("tr",[a("td",[t._v("Strict Inequality (unequal value and data type)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("!==")])]),t._v(" "),a("tr",[a("td",[t._v("Greater Than")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v(">")])]),t._v(" "),a("tr",[a("td",[t._v("Less Than")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("<")])]),t._v(" "),a("tr",[a("td",[t._v("Greater Than or Equal To")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v(">=")])]),t._v(" "),a("tr",[a("td",[t._v("Less Than or Equal To")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("<=")])]),t._v(" "),a("tr",[a("td",[t._v("Ternary (conditional shorthand)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("?")])])])]),t._v(" "),a("h2",{attrs:{id:"logical-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logical-operators","aria-hidden":"true"}},[t._v("#")]),t._v(" Logical Operators")]),t._v(" "),a("p",[t._v("Logical Operators are used for evaluating multiple comparisons in a single expression.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Operator")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Character")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Logical AND")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("&&")])]),t._v(" "),a("tr",[a("td",[t._v("Logical OR")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("||")])]),t._v(" "),a("tr",[a("td",[t._v("Logical NOT")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("!")])])])])])}],!1,null,null,null);e.default=i.exports}}]);